// <auto-generated />
using System;
using KlinikaPlusWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KlinikaPlusWeb.Migrations
{
    [DbContext(typeof(KlinikaPlusDbContext))]
    partial class KlinikaPlusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KlinikaPlusWeb.Models.Ljekar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ljekari");
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Nalaz", b =>
                {
                    b.Property<int>("PrijemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrijemId"), 1L, 1);

                    b.Property<DateTime>("DatumIVrijemeKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("TekstualniOpis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrijemId");

                    b.ToTable("Nalazi");
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Pacijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pacijenti");
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Prijem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumIVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HitanPrijem")
                        .HasColumnType("bit");

                    b.Property<int?>("LjekarId")
                        .HasColumnType("int");

                    b.Property<int?>("NalazId")
                        .HasColumnType("int");

                    b.Property<int?>("PacijentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LjekarId");

                    b.HasIndex("NalazId")
                        .IsUnique()
                        .HasFilter("[NalazId] IS NOT NULL");

                    b.HasIndex("PacijentId");

                    b.ToTable("Prijemi");
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Prijem", b =>
                {
                    b.HasOne("KlinikaPlusWeb.Models.Ljekar", "Ljekar")
                        .WithMany("LjekarPrijemi")
                        .HasForeignKey("LjekarId");

                    b.HasOne("KlinikaPlusWeb.Models.Nalaz", "Nalaz")
                        .WithOne("Prijem")
                        .HasForeignKey("KlinikaPlusWeb.Models.Prijem", "NalazId");

                    b.HasOne("KlinikaPlusWeb.Models.Pacijent", "Pacijent")
                        .WithMany("PacijentPrijemi")
                        .HasForeignKey("PacijentId");

                    b.Navigation("Ljekar");

                    b.Navigation("Nalaz");

                    b.Navigation("Pacijent");
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Ljekar", b =>
                {
                    b.Navigation("LjekarPrijemi");
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Nalaz", b =>
                {
                    b.Navigation("Prijem")
                        .IsRequired();
                });

            modelBuilder.Entity("KlinikaPlusWeb.Models.Pacijent", b =>
                {
                    b.Navigation("PacijentPrijemi");
                });
#pragma warning restore 612, 618
        }
    }
}
